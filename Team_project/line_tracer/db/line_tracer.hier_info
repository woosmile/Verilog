|line_tracer
clk => stop.CLK
clk => stop_cnt[0].CLK
clk => stop_cnt[1].CLK
clk => stop_cnt[2].CLK
clk => stop_cnt[3].CLK
clk => stop_cnt[4].CLK
clk => stop_cnt[5].CLK
clk => stop_cnt[6].CLK
clk => stop_cnt[7].CLK
clk => stop_cnt[8].CLK
clk => stop_cnt[9].CLK
clk => stop_cnt[10].CLK
clk => stop_cnt[11].CLK
clk => stop_cnt[12].CLK
clk => stop_cnt[13].CLK
clk => stop_cnt[14].CLK
clk => stop_cnt[15].CLK
clk => stop_cnt[16].CLK
clk => stop_cnt[17].CLK
clk => stop_cnt[18].CLK
clk => stop_cnt[19].CLK
clk => stop_cnt[20].CLK
clk => stop_cnt[21].CLK
clk => stop_cnt[22].CLK
clk => stop_cnt[23].CLK
clk => stop_cnt[24].CLK
clk => stop_cnt[25].CLK
clk => stop_cnt[26].CLK
clk => stop_cnt[27].CLK
clk => stop_cnt[28].CLK
clk => stop_cnt[29].CLK
clk => stop_cnt[30].CLK
clk => stop_cnt[31].CLK
clk => flag2[0].CLK
clk => flag2[1].CLK
clk => flag2[2].CLK
clk => flag2[3].CLK
clk => flag2[4].CLK
clk => flag2[5].CLK
clk => flag2[6].CLK
clk => flag2[7].CLK
clk => flag1[0].CLK
clk => flag1[1].CLK
clk => flag1[2].CLK
clk => flag1[3].CLK
clk => flag1[4].CLK
clk => flag1[5].CLK
clk => flag1[6].CLK
clk => flag1[7].CLK
clk => rx_data[0].CLK
clk => rx_data[1].CLK
clk => rx_data[2].CLK
clk => rx_data[3].CLK
clk => rx_data[4].CLK
clk => rx_data[5].CLK
clk => rx_data[6].CLK
clk => rx_data[7].CLK
clk => rx_en~reg0.CLK
clk => data_out[0].CLK
clk => data_out[1].CLK
clk => data_out[2].CLK
clk => data_out[3].CLK
clk => data_out[4].CLK
clk => data_out[5].CLK
clk => data_out[6].CLK
clk => data_out[7].CLK
clk => state_rx.CLK
clk => rx_bit_count[0].CLK
clk => rx_bit_count[1].CLK
clk => rx_bit_count[2].CLK
clk => rx_bit_count[3].CLK
clk => rx_clk_count[0].CLK
clk => rx_clk_count[1].CLK
clk => rx_clk_count[2].CLK
clk => rx_clk_count[3].CLK
clk => rx_clk_count[4].CLK
clk => rx_clk_count[5].CLK
clk => rx_clk_count[6].CLK
clk => rx_clk_count[7].CLK
clk => rx_clk_count[8].CLK
clk => rx_clk_count[9].CLK
clk => rx_clk_count[10].CLK
clk => rx_clk_count[11].CLK
clk => rx_clk_count[12].CLK
clk => rx_clk_count[13].CLK
clk => rx_clk_count[14].CLK
clk => rx_clk_count[15].CLK
clk => lcd_en~reg0.CLK
clk => line[0].CLK
clk => line[1].CLK
clk => line[2].CLK
clk => line[3].CLK
clk => line[4].CLK
clk => line[5].CLK
clk => cnt_50ms[0].CLK
clk => cnt_50ms[1].CLK
clk => cnt_50ms[2].CLK
clk => cnt_50ms[3].CLK
clk => cnt_50ms[4].CLK
clk => cnt_50ms[5].CLK
clk => cnt_50ms[6].CLK
clk => cnt_50ms[7].CLK
clk => cnt_50ms[8].CLK
clk => cnt_100ms[0].CLK
clk => cnt_100ms[1].CLK
clk => cnt_100ms[2].CLK
clk => cnt_100ms[3].CLK
clk => cnt_100ms[4].CLK
clk => cnt_clk[0].CLK
clk => cnt_clk[1].CLK
clk => cnt_clk[2].CLK
clk => cnt_clk[3].CLK
clk => cnt_clk[4].CLK
clk => cnt_clk[5].CLK
clk => cnt_clk[6].CLK
clk => cnt_clk[7].CLK
clk => cnt_clk[8].CLK
clk => cnt_clk[9].CLK
clk => cnt_clk[10].CLK
clk => cnt_clk[11].CLK
clk => cnt_clk[12].CLK
clk => cnt_clk[13].CLK
clk => cnt_clk[14].CLK
clk => cnt_clk[15].CLK
clk => cnt_clk[16].CLK
clk => cnt_clk[17].CLK
clk => m_cnt[0].CLK
clk => m_cnt[1].CLK
clk => m_cnt[2].CLK
clk => m_cnt[3].CLK
clk => m_cnt[4].CLK
clk => m_cnt[5].CLK
clk => m_cnt[6].CLK
clk => m_cnt[7].CLK
clk => m_cnt[8].CLK
clk => m_cnt[9].CLK
clk => m_cnt[10].CLK
clk => m_cnt[11].CLK
clk => m_cnt[12].CLK
clk => m_cnt[13].CLK
clk => m_cnt[14].CLK
clk => m_cnt[15].CLK
clk => m_cnt[16].CLK
clk => m_cnt[17].CLK
clk => m_cnt[18].CLK
clk => m_cnt[19].CLK
clk => m_cnt[20].CLK
clk => motor2[0]~reg0.CLK
clk => motor2[1]~reg0.CLK
clk => motor1[0]~reg0.CLK
clk => motor1[1]~reg0.CLK
clk => stop_flag~1.DATAIN
clk => state~5.DATAIN
reset => rx_en~reg0.ACLR
reset => data_out[0].ACLR
reset => data_out[1].ACLR
reset => data_out[2].ACLR
reset => data_out[3].ACLR
reset => data_out[4].ACLR
reset => data_out[5].ACLR
reset => data_out[6].ACLR
reset => data_out[7].ACLR
reset => state_rx.ACLR
reset => rx_bit_count[0].ACLR
reset => rx_bit_count[1].ACLR
reset => rx_bit_count[2].ACLR
reset => rx_bit_count[3].ACLR
reset => rx_clk_count[0].ACLR
reset => rx_clk_count[1].ACLR
reset => rx_clk_count[2].ACLR
reset => rx_clk_count[3].ACLR
reset => rx_clk_count[4].ACLR
reset => rx_clk_count[5].ACLR
reset => rx_clk_count[6].ACLR
reset => rx_clk_count[7].ACLR
reset => rx_clk_count[8].ACLR
reset => rx_clk_count[9].ACLR
reset => rx_clk_count[10].ACLR
reset => rx_clk_count[11].ACLR
reset => rx_clk_count[12].ACLR
reset => rx_clk_count[13].ACLR
reset => rx_clk_count[14].ACLR
reset => rx_clk_count[15].ACLR
reset => motor1[0]~reg0.ACLR
reset => motor1[1]~reg0.ACLR
reset => motor2[0]~reg0.ACLR
reset => motor2[1]~reg0.ACLR
reset => lcd_en~reg0.ACLR
reset => m_cnt[0].ACLR
reset => m_cnt[1].ACLR
reset => m_cnt[2].ACLR
reset => m_cnt[3].ACLR
reset => m_cnt[4].ACLR
reset => m_cnt[5].ACLR
reset => m_cnt[6].ACLR
reset => m_cnt[7].ACLR
reset => m_cnt[8].ACLR
reset => m_cnt[9].ACLR
reset => m_cnt[10].ACLR
reset => m_cnt[11].ACLR
reset => m_cnt[12].ACLR
reset => m_cnt[13].ACLR
reset => m_cnt[14].ACLR
reset => m_cnt[15].ACLR
reset => m_cnt[16].ACLR
reset => m_cnt[17].ACLR
reset => m_cnt[18].ACLR
reset => m_cnt[19].ACLR
reset => m_cnt[20].ACLR
reset => cnt_clk[0].ACLR
reset => cnt_clk[1].ACLR
reset => cnt_clk[2].ACLR
reset => cnt_clk[3].ACLR
reset => cnt_clk[4].ACLR
reset => cnt_clk[5].ACLR
reset => cnt_clk[6].ACLR
reset => cnt_clk[7].ACLR
reset => cnt_clk[8].ACLR
reset => cnt_clk[9].ACLR
reset => cnt_clk[10].ACLR
reset => cnt_clk[11].ACLR
reset => cnt_clk[12].ACLR
reset => cnt_clk[13].ACLR
reset => cnt_clk[14].ACLR
reset => cnt_clk[15].ACLR
reset => cnt_clk[16].ACLR
reset => cnt_clk[17].ACLR
reset => cnt_100ms[0].ACLR
reset => cnt_100ms[1].ACLR
reset => cnt_100ms[2].ACLR
reset => cnt_100ms[3].ACLR
reset => cnt_100ms[4].ACLR
reset => cnt_50ms[0].ACLR
reset => cnt_50ms[1].ACLR
reset => cnt_50ms[2].ACLR
reset => cnt_50ms[3].ACLR
reset => cnt_50ms[4].ACLR
reset => cnt_50ms[5].ACLR
reset => cnt_50ms[6].ACLR
reset => cnt_50ms[7].ACLR
reset => cnt_50ms[8].ACLR
reset => line[0].ACLR
reset => line[1].ACLR
reset => line[2].ACLR
reset => line[3].ACLR
reset => line[4].ACLR
reset => line[5].ACLR
reset => flag2[0].ACLR
reset => flag2[1].ACLR
reset => flag2[2].ACLR
reset => flag2[3].PRESET
reset => flag2[4].PRESET
reset => flag2[5].ACLR
reset => flag2[6].PRESET
reset => flag2[7].ACLR
reset => flag1[0].ACLR
reset => flag1[1].ACLR
reset => flag1[2].ACLR
reset => flag1[3].PRESET
reset => flag1[4].PRESET
reset => flag1[5].ACLR
reset => flag1[6].PRESET
reset => flag1[7].ACLR
reset => stop.ACLR
reset => stop_cnt[0].ACLR
reset => stop_cnt[1].ACLR
reset => stop_cnt[2].ACLR
reset => stop_cnt[3].ACLR
reset => stop_cnt[4].ACLR
reset => stop_cnt[5].ACLR
reset => stop_cnt[6].ACLR
reset => stop_cnt[7].ACLR
reset => stop_cnt[8].ACLR
reset => stop_cnt[9].ACLR
reset => stop_cnt[10].ACLR
reset => stop_cnt[11].ACLR
reset => stop_cnt[12].ACLR
reset => stop_cnt[13].ACLR
reset => stop_cnt[14].ACLR
reset => stop_cnt[15].ACLR
reset => stop_cnt[16].ACLR
reset => stop_cnt[17].ACLR
reset => stop_cnt[18].ACLR
reset => stop_cnt[19].ACLR
reset => stop_cnt[20].ACLR
reset => stop_cnt[21].ACLR
reset => stop_cnt[22].ACLR
reset => stop_cnt[23].ACLR
reset => stop_cnt[24].ACLR
reset => stop_cnt[25].ACLR
reset => stop_cnt[26].ACLR
reset => stop_cnt[27].ACLR
reset => stop_cnt[28].ACLR
reset => stop_cnt[29].ACLR
reset => stop_cnt[30].ACLR
reset => stop_cnt[31].ACLR
reset => stop_flag~3.DATAIN
reset => state~7.DATAIN
reset => rx_data[7].ENA
reset => rx_data[6].ENA
reset => rx_data[5].ENA
reset => rx_data[4].ENA
reset => rx_data[3].ENA
reset => rx_data[2].ENA
reset => rx_data[1].ENA
reset => rx_data[0].ENA
sensor1 => always0.IN0
sensor1 => always0.IN0
sensor1 => led[1].DATAIN
sensor1 => always0.IN0
sensor2 => always0.IN1
sensor2 => always0.IN1
sensor2 => led[0].DATAIN
sensor2 => always0.IN1
uart_rxd => rx_data.DATAB
uart_rxd => rx_data.DATAB
uart_rxd => rx_data.DATAB
uart_rxd => rx_data.DATAB
uart_rxd => rx_data.DATAB
uart_rxd => rx_data.DATAB
uart_rxd => rx_data.DATAB
uart_rxd => rx_data.DATAB
uart_rxd => always10.IN1
uart_rxd => always10.IN1
uart_rxd => always10.IN1


