TimeQuest Timing Analyzer report for ADC_DCMOTOR
Tue Jun 28 14:12:23 2016
Quartus II Version 11.0 Build 208 07/03/2011 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Fmax Summary
  6. Setup Summary
  7. Hold Summary
  8. Recovery Summary
  9. Removal Summary
 10. Minimum Pulse Width Summary
 11. Setup: 'adc_1:u0|c_state.s_start'
 12. Setup: 'clk'
 13. Setup: 'adc_1:u0|c_state.s_capture'
 14. Hold: 'adc_1:u0|c_state.s_capture'
 15. Hold: 'clk'
 16. Hold: 'adc_1:u0|c_state.s_start'
 17. Minimum Pulse Width: 'clk'
 18. Minimum Pulse Width: 'adc_1:u0|c_state.s_capture'
 19. Minimum Pulse Width: 'adc_1:u0|c_state.s_start'
 20. Setup Times
 21. Hold Times
 22. Clock to Output Times
 23. Minimum Clock to Output Times
 24. Propagation Delay
 25. Minimum Propagation Delay
 26. Setup Transfers
 27. Hold Transfers
 28. Report TCCS
 29. Report RSKM
 30. Unconstrained Paths
 31. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2011 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                    ;
+--------------------+-----------------------------------------------------------------+
; Quartus II Version ; Version 11.0 Build 208 07/03/2011 Service Pack 1 SJ Web Edition ;
; Revision Name      ; ADC_DCMOTOR                                                     ;
; Device Family      ; Cyclone                                                         ;
; Device Name        ; EP1C6Q240C8                                                     ;
; Timing Models      ; Final                                                           ;
; Delay Model        ; Slow Model                                                      ;
; Rise/Fall Delays   ; Unavailable                                                     ;
+--------------------+-----------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                                 ;
+----------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------------------------+
; Clock Name                 ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                        ;
+----------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------------------------+
; adc_1:u0|c_state.s_capture ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { adc_1:u0|c_state.s_capture } ;
; adc_1:u0|c_state.s_start   ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { adc_1:u0|c_state.s_start }   ;
; clk                        ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }                        ;
+----------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------------------------+


+--------------------------------------------------+
; Fmax Summary                                     ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 188.04 MHz ; 188.04 MHz      ; clk        ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+-----------------------------------------------------+
; Setup Summary                                       ;
+----------------------------+--------+---------------+
; Clock                      ; Slack  ; End Point TNS ;
+----------------------------+--------+---------------+
; adc_1:u0|c_state.s_start   ; -5.234 ; -5.234        ;
; clk                        ; -4.318 ; -172.712      ;
; adc_1:u0|c_state.s_capture ; 1.005  ; 0.000         ;
+----------------------------+--------+---------------+


+-----------------------------------------------------+
; Hold Summary                                        ;
+----------------------------+--------+---------------+
; Clock                      ; Slack  ; End Point TNS ;
+----------------------------+--------+---------------+
; adc_1:u0|c_state.s_capture ; -5.823 ; -10.283       ;
; clk                        ; -2.084 ; -5.965        ;
; adc_1:u0|c_state.s_start   ; 0.162  ; 0.000         ;
+----------------------------+--------+---------------+


--------------------
; Recovery Summary ;
--------------------
No paths to report.


-------------------
; Removal Summary ;
-------------------
No paths to report.


+-----------------------------------------------------+
; Minimum Pulse Width Summary                         ;
+----------------------------+--------+---------------+
; Clock                      ; Slack  ; End Point TNS ;
+----------------------------+--------+---------------+
; clk                        ; -1.583 ; -159.743      ;
; adc_1:u0|c_state.s_capture ; 0.500  ; 0.000         ;
; adc_1:u0|c_state.s_start   ; 0.500  ; 0.000         ;
+----------------------------+--------+---------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------+
; Setup: 'adc_1:u0|c_state.s_start'                                                                                                                      ;
+--------+----------------------------+-----------------+----------------------------+--------------------------+--------------+------------+------------+
; Slack  ; From Node                  ; To Node         ; Launch Clock               ; Latch Clock              ; Relationship ; Clock Skew ; Data Delay ;
+--------+----------------------------+-----------------+----------------------------+--------------------------+--------------+------------+------------+
; -5.234 ; adc_1:u0|c_state.s_oe_sig  ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 1.000        ; -1.876     ; 3.043      ;
; -4.846 ; adc_1:u0|adc_delay[1]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 1.000        ; -1.876     ; 2.655      ;
; -4.642 ; adc_1:u0|adc_delay[7]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 1.000        ; -1.876     ; 2.451      ;
; -4.603 ; adc_1:u0|adc_delay[2]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 1.000        ; -1.876     ; 2.412      ;
; -4.491 ; adc_1:u0|adc_delay[5]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 1.000        ; -1.876     ; 2.300      ;
; -4.419 ; adc_1:u0|adc_delay[3]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 1.000        ; -1.876     ; 2.228      ;
; -4.366 ; adc_1:u0|adc_delay[4]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 1.000        ; -1.876     ; 2.175      ;
; -4.173 ; adc_1:u0|adc_delay[6]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 1.000        ; -1.876     ; 1.982      ;
; -0.977 ; adc_1:u0|c_state.s_capture ; adc_1:u0|out_en ; adc_1:u0|c_state.s_capture ; adc_1:u0|c_state.s_start ; 0.500        ; 1.086      ; 1.472      ;
; -0.477 ; adc_1:u0|c_state.s_capture ; adc_1:u0|out_en ; adc_1:u0|c_state.s_capture ; adc_1:u0|c_state.s_start ; 1.000        ; 1.086      ; 1.472      ;
+--------+----------------------------+-----------------+----------------------------+--------------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Setup: 'clk'                                                                                                                             ;
+--------+-----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                   ; To Node                     ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+
; -4.318 ; DSP_4bitFND:u1|scan_cnt[24] ; DSP_4bitFND:u1|digit[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 5.281      ;
; -4.318 ; DSP_4bitFND:u1|scan_cnt[24] ; DSP_4bitFND:u1|scan_cnt[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 5.281      ;
; -4.317 ; DSP_4bitFND:u1|scan_cnt[24] ; DSP_4bitFND:u1|digit[0]     ; clk          ; clk         ; 1.000        ; 0.000      ; 5.280      ;
; -4.311 ; DSP_4bitFND:u1|scan_cnt[24] ; DSP_4bitFND:u1|scan_cnt[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 5.274      ;
; -4.306 ; DSP_4bitFND:u1|scan_cnt[24] ; DSP_4bitFND:u1|scan_cnt[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 5.269      ;
; -4.305 ; DSP_4bitFND:u1|scan_cnt[25] ; DSP_4bitFND:u1|digit[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 5.268      ;
; -4.305 ; DSP_4bitFND:u1|scan_cnt[25] ; DSP_4bitFND:u1|scan_cnt[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 5.268      ;
; -4.304 ; DSP_4bitFND:u1|scan_cnt[25] ; DSP_4bitFND:u1|digit[0]     ; clk          ; clk         ; 1.000        ; 0.000      ; 5.267      ;
; -4.298 ; DSP_4bitFND:u1|scan_cnt[25] ; DSP_4bitFND:u1|scan_cnt[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 5.261      ;
; -4.295 ; DSP_4bitFND:u1|scan_cnt[24] ; DSP_4bitFND:u1|scan_cnt[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 5.258      ;
; -4.294 ; DSP_4bitFND:u1|scan_cnt[24] ; DSP_4bitFND:u1|scan_cnt[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 5.257      ;
; -4.293 ; DSP_4bitFND:u1|scan_cnt[25] ; DSP_4bitFND:u1|scan_cnt[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 5.256      ;
; -4.291 ; DSP_4bitFND:u1|scan_cnt[24] ; DSP_4bitFND:u1|scan_cnt[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 5.254      ;
; -4.282 ; DSP_4bitFND:u1|scan_cnt[25] ; DSP_4bitFND:u1|scan_cnt[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 5.245      ;
; -4.281 ; DSP_4bitFND:u1|scan_cnt[25] ; DSP_4bitFND:u1|scan_cnt[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 5.244      ;
; -4.278 ; DSP_4bitFND:u1|scan_cnt[25] ; DSP_4bitFND:u1|scan_cnt[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 5.241      ;
; -4.151 ; DSP_4bitFND:u1|scan_cnt[26] ; DSP_4bitFND:u1|digit[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 5.114      ;
; -4.151 ; DSP_4bitFND:u1|scan_cnt[26] ; DSP_4bitFND:u1|scan_cnt[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 5.114      ;
; -4.150 ; DSP_4bitFND:u1|scan_cnt[26] ; DSP_4bitFND:u1|digit[0]     ; clk          ; clk         ; 1.000        ; 0.000      ; 5.113      ;
; -4.144 ; DSP_4bitFND:u1|scan_cnt[26] ; DSP_4bitFND:u1|scan_cnt[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 5.107      ;
; -4.139 ; DSP_4bitFND:u1|scan_cnt[26] ; DSP_4bitFND:u1|scan_cnt[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 5.102      ;
; -4.128 ; DSP_4bitFND:u1|scan_cnt[26] ; DSP_4bitFND:u1|scan_cnt[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 5.091      ;
; -4.127 ; DSP_4bitFND:u1|scan_cnt[26] ; DSP_4bitFND:u1|scan_cnt[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 5.090      ;
; -4.124 ; DSP_4bitFND:u1|scan_cnt[26] ; DSP_4bitFND:u1|scan_cnt[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 5.087      ;
; -4.038 ; DSP_4bitFND:u1|scan_cnt[21] ; DSP_4bitFND:u1|digit[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 5.001      ;
; -4.038 ; DSP_4bitFND:u1|scan_cnt[21] ; DSP_4bitFND:u1|scan_cnt[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 5.001      ;
; -4.037 ; DSP_4bitFND:u1|scan_cnt[21] ; DSP_4bitFND:u1|digit[0]     ; clk          ; clk         ; 1.000        ; 0.000      ; 5.000      ;
; -4.031 ; DSP_4bitFND:u1|scan_cnt[21] ; DSP_4bitFND:u1|scan_cnt[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.994      ;
; -4.026 ; DSP_4bitFND:u1|scan_cnt[21] ; DSP_4bitFND:u1|scan_cnt[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.989      ;
; -4.015 ; DSP_4bitFND:u1|scan_cnt[21] ; DSP_4bitFND:u1|scan_cnt[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.978      ;
; -4.014 ; DSP_4bitFND:u1|scan_cnt[21] ; DSP_4bitFND:u1|scan_cnt[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.977      ;
; -4.011 ; DSP_4bitFND:u1|scan_cnt[21] ; DSP_4bitFND:u1|scan_cnt[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.974      ;
; -3.820 ; DSP_4bitFND:u1|scan_cnt[3]  ; DSP_4bitFND:u1|digit[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.783      ;
; -3.820 ; DSP_4bitFND:u1|scan_cnt[3]  ; DSP_4bitFND:u1|scan_cnt[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.783      ;
; -3.819 ; DSP_4bitFND:u1|scan_cnt[3]  ; DSP_4bitFND:u1|digit[0]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.782      ;
; -3.816 ; DSP_4bitFND:u1|scan_cnt[22] ; DSP_4bitFND:u1|digit[1]     ; clk          ; clk         ; 1.000        ; 0.020      ; 4.799      ;
; -3.816 ; DSP_4bitFND:u1|scan_cnt[22] ; DSP_4bitFND:u1|scan_cnt[10] ; clk          ; clk         ; 1.000        ; 0.020      ; 4.799      ;
; -3.815 ; DSP_4bitFND:u1|scan_cnt[22] ; DSP_4bitFND:u1|digit[0]     ; clk          ; clk         ; 1.000        ; 0.020      ; 4.798      ;
; -3.813 ; DSP_4bitFND:u1|scan_cnt[3]  ; DSP_4bitFND:u1|scan_cnt[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.776      ;
; -3.809 ; DSP_4bitFND:u1|scan_cnt[22] ; DSP_4bitFND:u1|scan_cnt[11] ; clk          ; clk         ; 1.000        ; 0.020      ; 4.792      ;
; -3.808 ; DSP_4bitFND:u1|scan_cnt[3]  ; DSP_4bitFND:u1|scan_cnt[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.771      ;
; -3.806 ; DSP_4bitFND:u1|scan_cnt[13] ; DSP_4bitFND:u1|digit[1]     ; clk          ; clk         ; 1.000        ; 0.008      ; 4.777      ;
; -3.806 ; DSP_4bitFND:u1|scan_cnt[13] ; DSP_4bitFND:u1|scan_cnt[10] ; clk          ; clk         ; 1.000        ; 0.008      ; 4.777      ;
; -3.805 ; DSP_4bitFND:u1|scan_cnt[13] ; DSP_4bitFND:u1|digit[0]     ; clk          ; clk         ; 1.000        ; 0.008      ; 4.776      ;
; -3.804 ; DSP_4bitFND:u1|scan_cnt[22] ; DSP_4bitFND:u1|scan_cnt[8]  ; clk          ; clk         ; 1.000        ; 0.020      ; 4.787      ;
; -3.799 ; DSP_4bitFND:u1|scan_cnt[13] ; DSP_4bitFND:u1|scan_cnt[11] ; clk          ; clk         ; 1.000        ; 0.008      ; 4.770      ;
; -3.797 ; DSP_4bitFND:u1|scan_cnt[3]  ; DSP_4bitFND:u1|scan_cnt[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.760      ;
; -3.796 ; DSP_4bitFND:u1|scan_cnt[3]  ; DSP_4bitFND:u1|scan_cnt[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.759      ;
; -3.794 ; DSP_4bitFND:u1|scan_cnt[13] ; DSP_4bitFND:u1|scan_cnt[8]  ; clk          ; clk         ; 1.000        ; 0.008      ; 4.765      ;
; -3.793 ; DSP_4bitFND:u1|scan_cnt[3]  ; DSP_4bitFND:u1|scan_cnt[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.756      ;
; -3.793 ; DSP_4bitFND:u1|scan_cnt[22] ; DSP_4bitFND:u1|scan_cnt[6]  ; clk          ; clk         ; 1.000        ; 0.020      ; 4.776      ;
; -3.792 ; DSP_4bitFND:u1|scan_cnt[22] ; DSP_4bitFND:u1|scan_cnt[4]  ; clk          ; clk         ; 1.000        ; 0.020      ; 4.775      ;
; -3.789 ; DSP_4bitFND:u1|scan_cnt[22] ; DSP_4bitFND:u1|scan_cnt[3]  ; clk          ; clk         ; 1.000        ; 0.020      ; 4.772      ;
; -3.783 ; DSP_4bitFND:u1|scan_cnt[13] ; DSP_4bitFND:u1|scan_cnt[6]  ; clk          ; clk         ; 1.000        ; 0.008      ; 4.754      ;
; -3.782 ; DSP_4bitFND:u1|scan_cnt[13] ; DSP_4bitFND:u1|scan_cnt[4]  ; clk          ; clk         ; 1.000        ; 0.008      ; 4.753      ;
; -3.779 ; DSP_4bitFND:u1|scan_cnt[13] ; DSP_4bitFND:u1|scan_cnt[3]  ; clk          ; clk         ; 1.000        ; 0.008      ; 4.750      ;
; -3.740 ; DSP_4bitFND:u1|scan_cnt[14] ; DSP_4bitFND:u1|digit[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.703      ;
; -3.740 ; DSP_4bitFND:u1|scan_cnt[14] ; DSP_4bitFND:u1|scan_cnt[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.703      ;
; -3.739 ; DSP_4bitFND:u1|scan_cnt[14] ; DSP_4bitFND:u1|digit[0]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.702      ;
; -3.733 ; DSP_4bitFND:u1|scan_cnt[14] ; DSP_4bitFND:u1|scan_cnt[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.696      ;
; -3.732 ; DSP_4bitFND:u1|scan_cnt[8]  ; DSP_4bitFND:u1|scan_cnt[21] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.695      ;
; -3.728 ; DSP_4bitFND:u1|scan_cnt[14] ; DSP_4bitFND:u1|scan_cnt[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.691      ;
; -3.717 ; DSP_4bitFND:u1|scan_cnt[14] ; DSP_4bitFND:u1|scan_cnt[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.680      ;
; -3.716 ; DSP_4bitFND:u1|scan_cnt[14] ; DSP_4bitFND:u1|scan_cnt[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.679      ;
; -3.713 ; DSP_4bitFND:u1|scan_cnt[14] ; DSP_4bitFND:u1|scan_cnt[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.676      ;
; -3.642 ; DSP_4bitFND:u1|scan_cnt[8]  ; DSP_4bitFND:u1|scan_cnt[24] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.605      ;
; -3.639 ; DSP_4bitFND:u1|scan_cnt[0]  ; DSP_4bitFND:u1|digit[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.602      ;
; -3.639 ; DSP_4bitFND:u1|scan_cnt[0]  ; DSP_4bitFND:u1|scan_cnt[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.602      ;
; -3.638 ; DSP_4bitFND:u1|scan_cnt[0]  ; DSP_4bitFND:u1|digit[0]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.601      ;
; -3.633 ; DSP_4bitFND:u1|scan_cnt[9]  ; DSP_4bitFND:u1|digit[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.596      ;
; -3.633 ; DSP_4bitFND:u1|scan_cnt[9]  ; DSP_4bitFND:u1|scan_cnt[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.596      ;
; -3.632 ; DSP_4bitFND:u1|scan_cnt[9]  ; DSP_4bitFND:u1|digit[0]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.595      ;
; -3.632 ; DSP_4bitFND:u1|scan_cnt[0]  ; DSP_4bitFND:u1|scan_cnt[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.595      ;
; -3.630 ; DSP_4bitFND:u1|scan_cnt[14] ; DSP_4bitFND:u1|scan_cnt[21] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.593      ;
; -3.627 ; DSP_4bitFND:u1|scan_cnt[0]  ; DSP_4bitFND:u1|scan_cnt[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.590      ;
; -3.626 ; DSP_4bitFND:u1|scan_cnt[9]  ; DSP_4bitFND:u1|scan_cnt[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.589      ;
; -3.621 ; DSP_4bitFND:u1|scan_cnt[9]  ; DSP_4bitFND:u1|scan_cnt[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.584      ;
; -3.616 ; DSP_4bitFND:u1|scan_cnt[0]  ; DSP_4bitFND:u1|scan_cnt[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.579      ;
; -3.615 ; DSP_4bitFND:u1|scan_cnt[0]  ; DSP_4bitFND:u1|scan_cnt[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.578      ;
; -3.612 ; DSP_4bitFND:u1|scan_cnt[0]  ; DSP_4bitFND:u1|scan_cnt[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.575      ;
; -3.610 ; DSP_4bitFND:u1|scan_cnt[9]  ; DSP_4bitFND:u1|scan_cnt[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.573      ;
; -3.609 ; DSP_4bitFND:u1|scan_cnt[9]  ; DSP_4bitFND:u1|scan_cnt[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.572      ;
; -3.606 ; DSP_4bitFND:u1|scan_cnt[9]  ; DSP_4bitFND:u1|scan_cnt[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.569      ;
; -3.594 ; DSP_4bitFND:u1|scan_cnt[8]  ; DSP_4bitFND:u1|scan_cnt[22] ; clk          ; clk         ; 1.000        ; -0.020     ; 4.537      ;
; -3.580 ; DSP_4bitFND:u1|scan_cnt[8]  ; DSP_4bitFND:u1|scan_cnt[19] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.543      ;
; -3.573 ; DSP_4bitFND:u1|scan_cnt[8]  ; DSP_4bitFND:u1|scan_cnt[23] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.536      ;
; -3.564 ; DSP_4bitFND:u1|scan_cnt[13] ; DSP_4bitFND:u1|scan_cnt[21] ; clk          ; clk         ; 1.000        ; 0.008      ; 4.535      ;
; -3.540 ; DSP_4bitFND:u1|scan_cnt[14] ; DSP_4bitFND:u1|scan_cnt[24] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.503      ;
; -3.520 ; DSP_4bitFND:u1|scan_cnt[20] ; DSP_4bitFND:u1|digit[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.483      ;
; -3.520 ; DSP_4bitFND:u1|scan_cnt[20] ; DSP_4bitFND:u1|scan_cnt[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.483      ;
; -3.519 ; DSP_4bitFND:u1|scan_cnt[20] ; DSP_4bitFND:u1|digit[0]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.482      ;
; -3.513 ; DSP_4bitFND:u1|scan_cnt[20] ; DSP_4bitFND:u1|scan_cnt[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.476      ;
; -3.508 ; DSP_4bitFND:u1|scan_cnt[20] ; DSP_4bitFND:u1|scan_cnt[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.471      ;
; -3.497 ; DSP_4bitFND:u1|scan_cnt[20] ; DSP_4bitFND:u1|scan_cnt[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.460      ;
; -3.496 ; DSP_4bitFND:u1|scan_cnt[20] ; DSP_4bitFND:u1|scan_cnt[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.459      ;
; -3.493 ; DSP_4bitFND:u1|scan_cnt[20] ; DSP_4bitFND:u1|scan_cnt[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 4.456      ;
; -3.492 ; DSP_4bitFND:u1|scan_cnt[14] ; DSP_4bitFND:u1|scan_cnt[22] ; clk          ; clk         ; 1.000        ; -0.020     ; 4.435      ;
; -3.491 ; DSP_4bitFND:u1|scan_cnt[2]  ; DSP_4bitFND:u1|scan_cnt[21] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.454      ;
; -3.478 ; DSP_4bitFND:u1|scan_cnt[14] ; DSP_4bitFND:u1|scan_cnt[19] ; clk          ; clk         ; 1.000        ; 0.000      ; 4.441      ;
; -3.476 ; DSP_4bitFND:u1|scan_cnt[6]  ; DSP_4bitFND:u1|digit[1]     ; clk          ; clk         ; 1.000        ; 0.000      ; 4.439      ;
+--------+-----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------+
; Setup: 'adc_1:u0|c_state.s_capture'                                                                                                                ;
+-------+--------------------------+----------------+--------------------------+----------------------------+--------------+------------+------------+
; Slack ; From Node                ; To Node        ; Launch Clock             ; Latch Clock                ; Relationship ; Clock Skew ; Data Delay ;
+-------+--------------------------+----------------+--------------------------+----------------------------+--------------+------------+------------+
; 1.005 ; adc_1:u0|adc_delay[7]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.176      ; 2.856      ;
; 1.011 ; adc_1:u0|adc_delay[2]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.176      ; 2.850      ;
; 1.149 ; adc_1:u0|adc_delay[1]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.176      ; 2.712      ;
; 1.156 ; adc_1:u0|adc_delay[5]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.176      ; 2.705      ;
; 1.281 ; adc_1:u0|adc_delay[4]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.176      ; 2.580      ;
; 1.298 ; adc_1:u0|adc_delay[7]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.187      ; 2.749      ;
; 1.328 ; adc_1:u0|adc_delay[0]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.176      ; 2.533      ;
; 1.449 ; adc_1:u0|adc_delay[5]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.187      ; 2.598      ;
; 1.474 ; adc_1:u0|adc_delay[6]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.176      ; 2.387      ;
; 1.545 ; adc_1:u0|adc_delay[3]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.176      ; 2.316      ;
; 1.574 ; adc_1:u0|adc_delay[4]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.187      ; 2.473      ;
; 1.663 ; adc_1:u0|adc_delay[0]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.187      ; 2.384      ;
; 1.767 ; adc_1:u0|adc_delay[6]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.187      ; 2.280      ;
; 1.855 ; adc_1:u0|adc_delay[1]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.187      ; 2.192      ;
; 1.936 ; adc_1:u0|adc_delay[3]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.187      ; 2.111      ;
; 2.093 ; adc_1:u0|adc_delay[2]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 1.000        ; 4.187      ; 1.954      ;
; 3.820 ; adc_1:u0|c_state.s_start ; adc_1:u0|ale   ; adc_1:u0|c_state.s_start ; adc_1:u0|c_state.s_capture ; 0.500        ; 7.149      ; 2.913      ;
; 4.320 ; adc_1:u0|c_state.s_start ; adc_1:u0|ale   ; adc_1:u0|c_state.s_start ; adc_1:u0|c_state.s_capture ; 1.000        ; 7.149      ; 2.913      ;
; 5.008 ; adc_1:u0|c_state.s_start ; adc_1:u0|start ; adc_1:u0|c_state.s_start ; adc_1:u0|c_state.s_capture ; 0.500        ; 7.138      ; 1.539      ;
; 5.508 ; adc_1:u0|c_state.s_start ; adc_1:u0|start ; adc_1:u0|c_state.s_start ; adc_1:u0|c_state.s_capture ; 1.000        ; 7.138      ; 1.539      ;
+-------+--------------------------+----------------+--------------------------+----------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------+
; Hold: 'adc_1:u0|c_state.s_capture'                                                                                                                  ;
+--------+--------------------------+----------------+--------------------------+----------------------------+--------------+------------+------------+
; Slack  ; From Node                ; To Node        ; Launch Clock             ; Latch Clock                ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------+----------------+--------------------------+----------------------------+--------------+------------+------------+
; -5.823 ; adc_1:u0|c_state.s_start ; adc_1:u0|start ; adc_1:u0|c_state.s_start ; adc_1:u0|c_state.s_capture ; 0.000        ; 7.138      ; 1.539      ;
; -5.323 ; adc_1:u0|c_state.s_start ; adc_1:u0|start ; adc_1:u0|c_state.s_start ; adc_1:u0|c_state.s_capture ; -0.500       ; 7.138      ; 1.539      ;
; -4.460 ; adc_1:u0|c_state.s_start ; adc_1:u0|ale   ; adc_1:u0|c_state.s_start ; adc_1:u0|c_state.s_capture ; 0.000        ; 7.149      ; 2.913      ;
; -3.960 ; adc_1:u0|c_state.s_start ; adc_1:u0|ale   ; adc_1:u0|c_state.s_start ; adc_1:u0|c_state.s_capture ; -0.500       ; 7.149      ; 2.913      ;
; -2.233 ; adc_1:u0|adc_delay[2]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.187      ; 1.954      ;
; -2.076 ; adc_1:u0|adc_delay[3]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.187      ; 2.111      ;
; -1.995 ; adc_1:u0|adc_delay[1]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.187      ; 2.192      ;
; -1.907 ; adc_1:u0|adc_delay[6]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.187      ; 2.280      ;
; -1.860 ; adc_1:u0|adc_delay[3]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.176      ; 2.316      ;
; -1.803 ; adc_1:u0|adc_delay[0]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.187      ; 2.384      ;
; -1.789 ; adc_1:u0|adc_delay[6]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.176      ; 2.387      ;
; -1.714 ; adc_1:u0|adc_delay[4]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.187      ; 2.473      ;
; -1.643 ; adc_1:u0|adc_delay[0]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.176      ; 2.533      ;
; -1.596 ; adc_1:u0|adc_delay[4]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.176      ; 2.580      ;
; -1.589 ; adc_1:u0|adc_delay[5]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.187      ; 2.598      ;
; -1.471 ; adc_1:u0|adc_delay[5]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.176      ; 2.705      ;
; -1.464 ; adc_1:u0|adc_delay[1]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.176      ; 2.712      ;
; -1.438 ; adc_1:u0|adc_delay[7]    ; adc_1:u0|ale   ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.187      ; 2.749      ;
; -1.326 ; adc_1:u0|adc_delay[2]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.176      ; 2.850      ;
; -1.320 ; adc_1:u0|adc_delay[7]    ; adc_1:u0|start ; clk                      ; adc_1:u0|c_state.s_capture ; 0.000        ; 4.176      ; 2.856      ;
+--------+--------------------------+----------------+--------------------------+----------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------+
; Hold: 'clk'                                                                                                                                            ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                   ; To Node                     ; Launch Clock               ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+
; -2.084 ; adc_1:u0|c_state.s_start    ; adc_1:u0|c_state.s_wait     ; adc_1:u0|c_state.s_start   ; clk         ; 0.000        ; 2.962      ; 1.117      ;
; -1.806 ; adc_1:u0|c_state.s_start    ; adc_1:u0|c_state.s_start    ; adc_1:u0|c_state.s_start   ; clk         ; 0.000        ; 2.962      ; 1.395      ;
; -1.795 ; adc_1:u0|c_state.s_start    ; adc_1:u0|c_state.s_idle     ; adc_1:u0|c_state.s_start   ; clk         ; 0.000        ; 2.962      ; 1.406      ;
; -1.584 ; adc_1:u0|c_state.s_start    ; adc_1:u0|c_state.s_wait     ; adc_1:u0|c_state.s_start   ; clk         ; -0.500       ; 2.962      ; 1.117      ;
; -1.306 ; adc_1:u0|c_state.s_start    ; adc_1:u0|c_state.s_start    ; adc_1:u0|c_state.s_start   ; clk         ; -0.500       ; 2.962      ; 1.395      ;
; -1.295 ; adc_1:u0|c_state.s_start    ; adc_1:u0|c_state.s_idle     ; adc_1:u0|c_state.s_start   ; clk         ; -0.500       ; 2.962      ; 1.406      ;
; -1.073 ; adc_1:u0|c_state.s_capture  ; adc_1:u0|c_state.s_idle     ; adc_1:u0|c_state.s_capture ; clk         ; 0.000        ; 2.962      ; 2.128      ;
; -0.573 ; adc_1:u0|c_state.s_capture  ; adc_1:u0|c_state.s_idle     ; adc_1:u0|c_state.s_capture ; clk         ; -0.500       ; 2.962      ; 2.128      ;
; -0.035 ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[4]       ; adc_1:u0|c_state.s_start   ; clk         ; 0.000        ; 2.962      ; 3.166      ;
; -0.035 ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[5]       ; adc_1:u0|c_state.s_start   ; clk         ; 0.000        ; 2.962      ; 3.166      ;
; -0.035 ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[6]       ; adc_1:u0|c_state.s_start   ; clk         ; 0.000        ; 2.962      ; 3.166      ;
; -0.035 ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[7]       ; adc_1:u0|c_state.s_start   ; clk         ; 0.000        ; 2.962      ; 3.166      ;
; -0.035 ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[3]       ; adc_1:u0|c_state.s_start   ; clk         ; 0.000        ; 2.962      ; 3.166      ;
; -0.035 ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[0]       ; adc_1:u0|c_state.s_start   ; clk         ; 0.000        ; 2.962      ; 3.166      ;
; -0.035 ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[1]       ; adc_1:u0|c_state.s_start   ; clk         ; 0.000        ; 2.962      ; 3.166      ;
; -0.035 ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[2]       ; adc_1:u0|c_state.s_start   ; clk         ; 0.000        ; 2.962      ; 3.166      ;
; 0.465  ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[4]       ; adc_1:u0|c_state.s_start   ; clk         ; -0.500       ; 2.962      ; 3.166      ;
; 0.465  ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[5]       ; adc_1:u0|c_state.s_start   ; clk         ; -0.500       ; 2.962      ; 3.166      ;
; 0.465  ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[6]       ; adc_1:u0|c_state.s_start   ; clk         ; -0.500       ; 2.962      ; 3.166      ;
; 0.465  ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[7]       ; adc_1:u0|c_state.s_start   ; clk         ; -0.500       ; 2.962      ; 3.166      ;
; 0.465  ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[3]       ; adc_1:u0|c_state.s_start   ; clk         ; -0.500       ; 2.962      ; 3.166      ;
; 0.465  ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[0]       ; adc_1:u0|c_state.s_start   ; clk         ; -0.500       ; 2.962      ; 3.166      ;
; 0.465  ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[1]       ; adc_1:u0|c_state.s_start   ; clk         ; -0.500       ; 2.962      ; 3.166      ;
; 0.465  ; adc_1:u0|c_state.s_start    ; adc_1:u0|adc_delay[2]       ; adc_1:u0|c_state.s_start   ; clk         ; -0.500       ; 2.962      ; 3.166      ;
; 1.223  ; adc_1:u0|adc_clk            ; adc_1:u0|adc_clk            ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.238      ;
; 1.232  ; adc_1:u0|c_state.s_idle     ; adc_1:u0|c_state.s_start    ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.247      ;
; 1.255  ; adc_1:u0|c_state.s_oe_sig   ; adc_1:u0|c_state.s_oe_sig   ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.270      ;
; 1.257  ; adc_1:u0|c_state.s_oe_sig   ; adc_1:u0|c_state.s_capture  ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.272      ;
; 1.285  ; adc_1:u0|c_state.s_wait     ; adc_1:u0|c_state.s_oe_sig   ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.300      ;
; 1.289  ; DSP_4bitFND:u1|digit[0]     ; DSP_4bitFND:u1|digit[1]     ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.304      ;
; 1.294  ; DSP_4bitFND:u1|digit[0]     ; DSP_4bitFND:u1|digit[0]     ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.309      ;
; 1.328  ; adc_1:u0|adc_delay[4]       ; adc_1:u0|adc_delay[4]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.343      ;
; 1.329  ; adc_1:u0|clk_cnt[3]         ; adc_1:u0|clk_cnt[3]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.344      ;
; 1.332  ; adc_1:u0|adc_delay[0]       ; adc_1:u0|adc_delay[0]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.347      ;
; 1.334  ; adc_1:u0|clk_cnt[4]         ; adc_1:u0|clk_cnt[4]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.349      ;
; 1.336  ; adc_1:u0|adc_delay[3]       ; adc_1:u0|adc_delay[3]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.351      ;
; 1.338  ; adc_1:u0|adc_delay[5]       ; adc_1:u0|adc_delay[5]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.353      ;
; 1.476  ; adc_1:u0|adc_delay[2]       ; adc_1:u0|adc_delay[2]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.491      ;
; 1.479  ; adc_1:u0|adc_delay[1]       ; adc_1:u0|adc_delay[1]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.494      ;
; 1.479  ; adc_1:u0|c_state.s_wait     ; adc_1:u0|c_state.s_wait     ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.494      ;
; 1.485  ; adc_1:u0|clk_cnt[7]         ; adc_1:u0|clk_cnt[7]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.500      ;
; 1.488  ; adc_1:u0|adc_delay[6]       ; adc_1:u0|adc_delay[6]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.503      ;
; 1.491  ; adc_1:u0|clk_cnt[2]         ; adc_1:u0|clk_cnt[2]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.506      ;
; 1.493  ; adc_1:u0|clk_cnt[6]         ; adc_1:u0|clk_cnt[6]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.508      ;
; 1.494  ; adc_1:u0|clk_cnt[1]         ; adc_1:u0|clk_cnt[1]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.509      ;
; 1.501  ; DSP_4bitFND:u1|digit[1]     ; DSP_4bitFND:u1|digit[1]     ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.516      ;
; 1.551  ; DSP_4bitFND:u1|digit[0]     ; DSP_4bitFND:u1|temp[1]      ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.566      ;
; 1.554  ; DSP_4bitFND:u1|digit[0]     ; DSP_4bitFND:u1|temp[0]      ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.569      ;
; 1.557  ; DSP_4bitFND:u1|digit[0]     ; DSP_4bitFND:u1|temp[2]      ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.572      ;
; 1.560  ; DSP_4bitFND:u1|digit[0]     ; DSP_4bitFND:u1|temp[3]      ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.575      ;
; 1.658  ; adc_1:u0|adc_delay[7]       ; adc_1:u0|adc_delay[7]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.673      ;
; 1.692  ; adc_1:u0|clk_cnt[0]         ; adc_1:u0|clk_cnt[0]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.707      ;
; 1.874  ; DSP_4bitFND:u1|scan_cnt[27] ; DSP_4bitFND:u1|scan_cnt[27] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.889      ;
; 1.878  ; DSP_4bitFND:u1|scan_cnt[0]  ; DSP_4bitFND:u1|scan_cnt[0]  ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.893      ;
; 1.928  ; adc_1:u0|clk_cnt[3]         ; adc_1:u0|clk_cnt[4]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.943      ;
; 1.931  ; adc_1:u0|adc_delay[0]       ; adc_1:u0|adc_delay[1]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.946      ;
; 1.935  ; adc_1:u0|adc_delay[3]       ; adc_1:u0|adc_delay[4]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.950      ;
; 1.937  ; adc_1:u0|adc_delay[5]       ; adc_1:u0|adc_delay[6]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.952      ;
; 1.943  ; adc_1:u0|clk_cnt[5]         ; adc_1:u0|clk_cnt[5]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.958      ;
; 2.009  ; adc_1:u0|adc_delay[0]       ; adc_1:u0|adc_delay[2]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.024      ;
; 2.015  ; adc_1:u0|adc_delay[5]       ; adc_1:u0|adc_delay[7]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.030      ;
; 2.031  ; DSP_4bitFND:u1|digit[1]     ; DSP_4bitFND:u1|temp[0]      ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.046      ;
; 2.031  ; DSP_4bitFND:u1|digit[1]     ; DSP_4bitFND:u1|temp[1]      ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.046      ;
; 2.031  ; DSP_4bitFND:u1|digit[1]     ; DSP_4bitFND:u1|temp[2]      ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.046      ;
; 2.031  ; DSP_4bitFND:u1|digit[1]     ; DSP_4bitFND:u1|temp[3]      ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.046      ;
; 2.085  ; adc_1:u0|adc_delay[2]       ; adc_1:u0|adc_delay[3]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.100      ;
; 2.087  ; adc_1:u0|adc_delay[0]       ; adc_1:u0|adc_delay[3]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.102      ;
; 2.088  ; adc_1:u0|adc_delay[1]       ; adc_1:u0|adc_delay[2]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.103      ;
; 2.097  ; adc_1:u0|adc_delay[6]       ; adc_1:u0|adc_delay[7]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.112      ;
; 2.100  ; adc_1:u0|clk_cnt[2]         ; adc_1:u0|clk_cnt[3]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.115      ;
; 2.102  ; adc_1:u0|clk_cnt[6]         ; adc_1:u0|clk_cnt[7]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.117      ;
; 2.103  ; adc_1:u0|clk_cnt[1]         ; adc_1:u0|clk_cnt[2]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.118      ;
; 2.143  ; adc_1:u0|adc_delay[4]       ; adc_1:u0|adc_delay[5]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.158      ;
; 2.143  ; adc_1:u0|adc_delay[4]       ; adc_1:u0|adc_delay[6]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.158      ;
; 2.143  ; adc_1:u0|adc_delay[4]       ; adc_1:u0|adc_delay[7]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.158      ;
; 2.149  ; adc_1:u0|clk_cnt[4]         ; adc_1:u0|clk_cnt[5]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.164      ;
; 2.149  ; adc_1:u0|clk_cnt[4]         ; adc_1:u0|clk_cnt[6]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.164      ;
; 2.149  ; adc_1:u0|clk_cnt[4]         ; adc_1:u0|clk_cnt[7]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.164      ;
; 2.150  ; adc_1:u0|clk_cnt[3]         ; adc_1:u0|clk_cnt[5]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.165      ;
; 2.150  ; adc_1:u0|clk_cnt[3]         ; adc_1:u0|clk_cnt[6]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.165      ;
; 2.150  ; adc_1:u0|clk_cnt[3]         ; adc_1:u0|clk_cnt[7]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.165      ;
; 2.157  ; adc_1:u0|adc_delay[3]       ; adc_1:u0|adc_delay[5]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.172      ;
; 2.157  ; adc_1:u0|adc_delay[3]       ; adc_1:u0|adc_delay[6]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.172      ;
; 2.157  ; adc_1:u0|adc_delay[3]       ; adc_1:u0|adc_delay[7]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.172      ;
; 2.163  ; adc_1:u0|adc_delay[2]       ; adc_1:u0|adc_delay[4]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.178      ;
; 2.165  ; adc_1:u0|adc_delay[0]       ; adc_1:u0|adc_delay[4]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.180      ;
; 2.166  ; adc_1:u0|adc_delay[1]       ; adc_1:u0|adc_delay[3]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.181      ;
; 2.178  ; adc_1:u0|clk_cnt[2]         ; adc_1:u0|clk_cnt[4]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.193      ;
; 2.181  ; adc_1:u0|clk_cnt[1]         ; adc_1:u0|clk_cnt[3]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.196      ;
; 2.190  ; DSP_4bitFND:u1|scan_cnt[7]  ; DSP_4bitFND:u1|scan_cnt[7]  ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.205      ;
; 2.207  ; adc_1:u0|adc_delay[3]       ; adc_1:u0|c_state.s_oe_sig   ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.222      ;
; 2.210  ; adc_1:u0|adc_delay[3]       ; adc_1:u0|c_state.s_capture  ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.225      ;
; 2.244  ; adc_1:u0|adc_delay[1]       ; adc_1:u0|adc_delay[4]       ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.259      ;
; 2.251  ; DSP_4bitFND:u1|scan_cnt[26] ; DSP_4bitFND:u1|scan_cnt[26] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.266      ;
; 2.259  ; adc_1:u0|clk_cnt[1]         ; adc_1:u0|clk_cnt[4]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.274      ;
; 2.273  ; DSP_4bitFND:u1|scan_cnt[15] ; DSP_4bitFND:u1|scan_cnt[9]  ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.288      ;
; 2.301  ; adc_1:u0|clk_cnt[0]         ; adc_1:u0|clk_cnt[1]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.316      ;
; 2.345  ; adc_1:u0|clk_cnt[6]         ; adc_1:u0|adc_clk            ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.360      ;
; 2.367  ; DSP_4bitFND:u1|scan_cnt[2]  ; DSP_4bitFND:u1|scan_cnt[2]  ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.382      ;
; 2.379  ; adc_1:u0|clk_cnt[0]         ; adc_1:u0|clk_cnt[2]         ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.394      ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------+
; Hold: 'adc_1:u0|c_state.s_start'                                                                                                                      ;
+-------+----------------------------+-----------------+----------------------------+--------------------------+--------------+------------+------------+
; Slack ; From Node                  ; To Node         ; Launch Clock               ; Latch Clock              ; Relationship ; Clock Skew ; Data Delay ;
+-------+----------------------------+-----------------+----------------------------+--------------------------+--------------+------------+------------+
; 0.162 ; adc_1:u0|c_state.s_capture ; adc_1:u0|out_en ; adc_1:u0|c_state.s_capture ; adc_1:u0|c_state.s_start ; 0.000        ; 1.086      ; 1.472      ;
; 0.662 ; adc_1:u0|c_state.s_capture ; adc_1:u0|out_en ; adc_1:u0|c_state.s_capture ; adc_1:u0|c_state.s_start ; -0.500       ; 1.086      ; 1.472      ;
; 3.858 ; adc_1:u0|adc_delay[6]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 0.000        ; -1.876     ; 1.982      ;
; 4.051 ; adc_1:u0|adc_delay[4]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 0.000        ; -1.876     ; 2.175      ;
; 4.104 ; adc_1:u0|adc_delay[3]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 0.000        ; -1.876     ; 2.228      ;
; 4.176 ; adc_1:u0|adc_delay[5]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 0.000        ; -1.876     ; 2.300      ;
; 4.288 ; adc_1:u0|adc_delay[2]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 0.000        ; -1.876     ; 2.412      ;
; 4.327 ; adc_1:u0|adc_delay[7]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 0.000        ; -1.876     ; 2.451      ;
; 4.531 ; adc_1:u0|adc_delay[1]      ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 0.000        ; -1.876     ; 2.655      ;
; 4.919 ; adc_1:u0|c_state.s_oe_sig  ; adc_1:u0|out_en ; clk                        ; adc_1:u0|c_state.s_start ; 0.000        ; -1.876     ; 3.043      ;
+-------+----------------------------+-----------------+----------------------------+--------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------+
; Minimum Pulse Width: 'clk'                                                                                   ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                      ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+
; -1.583 ; 1.000        ; 2.583          ; Port Rate        ; clk   ; Rise       ; clk                         ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|digit[0]     ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|digit[0]     ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|digit[1]     ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|digit[1]     ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|fnd_sel[0]   ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|fnd_sel[0]   ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|fnd_sel[1]   ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|fnd_sel[1]   ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|fnd_sel[2]   ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|fnd_sel[2]   ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|fnd_sel[3]   ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|fnd_sel[3]   ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[0]  ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[0]  ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[10] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[10] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[11] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[11] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[12] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[12] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[13] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[13] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[14] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[14] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[15] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[15] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[16] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[16] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[17] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[17] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[18] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[18] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[19] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[19] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[1]  ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[1]  ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[20] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[20] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[21] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[21] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[22] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[22] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[23] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[23] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[24] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[24] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[25] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[25] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[26] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[26] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[27] ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[27] ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[2]  ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[2]  ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[3]  ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[3]  ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[4]  ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[4]  ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[5]  ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[5]  ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[6]  ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[6]  ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[7]  ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[7]  ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[8]  ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[8]  ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[9]  ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|scan_cnt[9]  ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|temp[0]      ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|temp[0]      ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|temp[1]      ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|temp[1]      ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|temp[2]      ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|temp[2]      ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; DSP_4bitFND:u1|temp[3]      ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; DSP_4bitFND:u1|temp[3]      ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; adc_1:u0|adc_clk            ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; adc_1:u0|adc_clk            ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; adc_1:u0|adc_delay[0]       ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; adc_1:u0|adc_delay[0]       ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; adc_1:u0|adc_delay[1]       ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; adc_1:u0|adc_delay[1]       ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; adc_1:u0|adc_delay[2]       ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; adc_1:u0|adc_delay[2]       ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; adc_1:u0|adc_delay[3]       ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; adc_1:u0|adc_delay[3]       ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; adc_1:u0|adc_delay[4]       ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; adc_1:u0|adc_delay[4]       ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; adc_1:u0|adc_delay[5]       ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; adc_1:u0|adc_delay[5]       ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; adc_1:u0|adc_delay[6]       ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; adc_1:u0|adc_delay[6]       ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; adc_1:u0|adc_delay[7]       ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; adc_1:u0|adc_delay[7]       ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; adc_1:u0|c_state.s_capture  ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; adc_1:u0|c_state.s_capture  ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; adc_1:u0|c_state.s_idle     ;
; -1.318 ; 0.500        ; 1.818          ; Low Pulse Width  ; clk   ; Rise       ; adc_1:u0|c_state.s_idle     ;
; -1.318 ; 0.500        ; 1.818          ; High Pulse Width ; clk   ; Rise       ; adc_1:u0|c_state.s_oe_sig   ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+


+----------------------------------------------------------------------------------------------------------------------------------+
; Minimum Pulse Width: 'adc_1:u0|c_state.s_capture'                                                                                ;
+-------+--------------+----------------+------------------+----------------------------+------------+-----------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                      ; Clock Edge ; Target                      ;
+-------+--------------+----------------+------------------+----------------------------+------------+-----------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; adc_1:u0|c_state.s_capture ; Rise       ; adc_1:u0|ale                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; adc_1:u0|c_state.s_capture ; Rise       ; adc_1:u0|ale                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; adc_1:u0|c_state.s_capture ; Rise       ; adc_1:u0|start              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; adc_1:u0|c_state.s_capture ; Rise       ; adc_1:u0|start              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; adc_1:u0|c_state.s_capture ; Rise       ; u0|ale|datac                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; adc_1:u0|c_state.s_capture ; Rise       ; u0|ale|datac                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; adc_1:u0|c_state.s_capture ; Rise       ; u0|c_state.s_capture|regout ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; adc_1:u0|c_state.s_capture ; Rise       ; u0|c_state.s_capture|regout ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; adc_1:u0|c_state.s_capture ; Rise       ; u0|start|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; adc_1:u0|c_state.s_capture ; Rise       ; u0|start|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; adc_1:u0|c_state.s_capture ; Rise       ; u0|start~0|combout          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; adc_1:u0|c_state.s_capture ; Rise       ; u0|start~0|combout          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; adc_1:u0|c_state.s_capture ; Rise       ; u0|start~0|datac            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; adc_1:u0|c_state.s_capture ; Rise       ; u0|start~0|datac            ;
+-------+--------------+----------------+------------------+----------------------------+------------+-----------------------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Minimum Pulse Width: 'adc_1:u0|c_state.s_start'                                                                              ;
+-------+--------------+----------------+------------------+--------------------------+------------+---------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                    ; Clock Edge ; Target                    ;
+-------+--------------+----------------+------------------+--------------------------+------------+---------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; adc_1:u0|c_state.s_start ; Rise       ; adc_1:u0|out_en           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; adc_1:u0|c_state.s_start ; Rise       ; adc_1:u0|out_en           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; adc_1:u0|c_state.s_start ; Rise       ; u0|c_state.s_start|regout ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; adc_1:u0|c_state.s_start ; Rise       ; u0|c_state.s_start|regout ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; adc_1:u0|c_state.s_start ; Rise       ; u0|out_en|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; adc_1:u0|c_state.s_start ; Rise       ; u0|out_en|datac           ;
+-------+--------------+----------------+------------------+--------------------------+------------+---------------------------+


+--------------------------------------------------------------------------+
; Setup Times                                                              ;
+------------+------------+--------+--------+------------+-----------------+
; Data Port  ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------+------------+--------+--------+------------+-----------------+
; eoc        ; clk        ; 8.370  ; 8.370  ; Rise       ; clk             ;
; result[*]  ; clk        ; 27.190 ; 27.190 ; Rise       ; clk             ;
;  result[0] ; clk        ; 7.365  ; 7.365  ; Rise       ; clk             ;
;  result[1] ; clk        ; 14.025 ; 14.025 ; Rise       ; clk             ;
;  result[2] ; clk        ; 17.271 ; 17.271 ; Rise       ; clk             ;
;  result[3] ; clk        ; 21.422 ; 21.422 ; Rise       ; clk             ;
;  result[4] ; clk        ; 24.748 ; 24.748 ; Rise       ; clk             ;
;  result[5] ; clk        ; 27.190 ; 27.190 ; Rise       ; clk             ;
;  result[6] ; clk        ; 25.628 ; 25.628 ; Rise       ; clk             ;
;  result[7] ; clk        ; 24.973 ; 24.973 ; Rise       ; clk             ;
+------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------+
; Hold Times                                                               ;
+------------+------------+--------+--------+------------+-----------------+
; Data Port  ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------+------------+--------+--------+------------+-----------------+
; eoc        ; clk        ; -8.071 ; -8.071 ; Rise       ; clk             ;
; result[*]  ; clk        ; -7.313 ; -7.313 ; Rise       ; clk             ;
;  result[0] ; clk        ; -7.313 ; -7.313 ; Rise       ; clk             ;
;  result[1] ; clk        ; -8.924 ; -8.924 ; Rise       ; clk             ;
;  result[2] ; clk        ; -8.810 ; -8.810 ; Rise       ; clk             ;
;  result[3] ; clk        ; -9.491 ; -9.491 ; Rise       ; clk             ;
;  result[4] ; clk        ; -9.872 ; -9.872 ; Rise       ; clk             ;
;  result[5] ; clk        ; -8.888 ; -8.888 ; Rise       ; clk             ;
;  result[6] ; clk        ; -8.866 ; -8.866 ; Rise       ; clk             ;
;  result[7] ; clk        ; -8.648 ; -8.648 ; Rise       ; clk             ;
+------------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                 ;
+--------------+----------------------------+--------+--------+------------+----------------------------+
; Data Port    ; Clock Port                 ; Rise   ; Fall   ; Clock Edge ; Clock Reference            ;
+--------------+----------------------------+--------+--------+------------+----------------------------+
; ale          ; adc_1:u0|c_state.s_capture ; 15.272 ; 15.272 ; Rise       ; adc_1:u0|c_state.s_capture ;
; start        ; adc_1:u0|c_state.s_capture ; 13.895 ; 13.895 ; Rise       ; adc_1:u0|c_state.s_capture ;
; out_en       ; adc_1:u0|c_state.s_start   ; 8.706  ; 8.706  ; Rise       ; adc_1:u0|c_state.s_start   ;
; adc_clk      ; clk                        ; 6.655  ; 6.655  ; Rise       ; clk                        ;
; fnd_data[*]  ; clk                        ; 9.893  ; 9.893  ; Rise       ; clk                        ;
;  fnd_data[0] ; clk                        ; 9.886  ; 9.886  ; Rise       ; clk                        ;
;  fnd_data[1] ; clk                        ; 9.565  ; 9.565  ; Rise       ; clk                        ;
;  fnd_data[2] ; clk                        ; 9.556  ; 9.556  ; Rise       ; clk                        ;
;  fnd_data[3] ; clk                        ; 9.562  ; 9.562  ; Rise       ; clk                        ;
;  fnd_data[4] ; clk                        ; 9.578  ; 9.578  ; Rise       ; clk                        ;
;  fnd_data[5] ; clk                        ; 9.554  ; 9.554  ; Rise       ; clk                        ;
;  fnd_data[6] ; clk                        ; 9.893  ; 9.893  ; Rise       ; clk                        ;
; fnd_sel[*]   ; clk                        ; 6.641  ; 6.641  ; Rise       ; clk                        ;
;  fnd_sel[0]  ; clk                        ; 6.591  ; 6.591  ; Rise       ; clk                        ;
;  fnd_sel[1]  ; clk                        ; 6.593  ; 6.593  ; Rise       ; clk                        ;
;  fnd_sel[2]  ; clk                        ; 6.591  ; 6.591  ; Rise       ; clk                        ;
;  fnd_sel[3]  ; clk                        ; 6.641  ; 6.641  ; Rise       ; clk                        ;
+--------------+----------------------------+--------+--------+------------+----------------------------+


+-------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                         ;
+--------------+----------------------------+--------+--------+------------+----------------------------+
; Data Port    ; Clock Port                 ; Rise   ; Fall   ; Clock Edge ; Clock Reference            ;
+--------------+----------------------------+--------+--------+------------+----------------------------+
; ale          ; adc_1:u0|c_state.s_capture ; 15.272 ; 15.272 ; Rise       ; adc_1:u0|c_state.s_capture ;
; start        ; adc_1:u0|c_state.s_capture ; 13.895 ; 13.895 ; Rise       ; adc_1:u0|c_state.s_capture ;
; out_en       ; adc_1:u0|c_state.s_start   ; 8.706  ; 8.706  ; Rise       ; adc_1:u0|c_state.s_start   ;
; adc_clk      ; clk                        ; 6.655  ; 6.655  ; Rise       ; clk                        ;
; fnd_data[*]  ; clk                        ; 9.078  ; 9.078  ; Rise       ; clk                        ;
;  fnd_data[0] ; clk                        ; 9.408  ; 9.408  ; Rise       ; clk                        ;
;  fnd_data[1] ; clk                        ; 9.087  ; 9.087  ; Rise       ; clk                        ;
;  fnd_data[2] ; clk                        ; 9.078  ; 9.078  ; Rise       ; clk                        ;
;  fnd_data[3] ; clk                        ; 9.083  ; 9.083  ; Rise       ; clk                        ;
;  fnd_data[4] ; clk                        ; 9.099  ; 9.099  ; Rise       ; clk                        ;
;  fnd_data[5] ; clk                        ; 9.078  ; 9.078  ; Rise       ; clk                        ;
;  fnd_data[6] ; clk                        ; 9.415  ; 9.415  ; Rise       ; clk                        ;
; fnd_sel[*]   ; clk                        ; 6.591  ; 6.591  ; Rise       ; clk                        ;
;  fnd_sel[0]  ; clk                        ; 6.591  ; 6.591  ; Rise       ; clk                        ;
;  fnd_sel[1]  ; clk                        ; 6.593  ; 6.593  ; Rise       ; clk                        ;
;  fnd_sel[2]  ; clk                        ; 6.591  ; 6.591  ; Rise       ; clk                        ;
;  fnd_sel[3]  ; clk                        ; 6.641  ; 6.641  ; Rise       ; clk                        ;
+--------------+----------------------------+--------+--------+------------+----------------------------+


+------------------------------------------------------+
; Propagation Delay                                    ;
+------------+-------------+--------+----+----+--------+
; Input Port ; Output Port ; RR     ; RF ; FR ; FF     ;
+------------+-------------+--------+----+----+--------+
; dip_sw[0]  ; motor[1]    ; 14.826 ;    ;    ; 14.826 ;
; dip_sw[1]  ; motor[1]    ; 14.730 ;    ;    ; 14.730 ;
; dip_sw[2]  ; motor[1]    ; 14.580 ;    ;    ; 14.580 ;
; dip_sw[3]  ; motor[1]    ; 14.748 ;    ;    ; 14.748 ;
; dip_sw[4]  ; motor[1]    ; 14.715 ;    ;    ; 14.715 ;
; dip_sw[5]  ; motor[1]    ; 14.138 ;    ;    ; 14.138 ;
; dip_sw[6]  ; motor[1]    ; 14.239 ;    ;    ; 14.239 ;
; dip_sw[7]  ; motor[1]    ; 13.167 ;    ;    ; 13.167 ;
; reset      ; motor_en    ; 13.784 ;    ;    ; 13.784 ;
; reset      ; portc[0]    ; 13.781 ;    ;    ; 13.781 ;
; result[0]  ; motor[1]    ; 14.859 ;    ;    ; 14.859 ;
; result[1]  ; motor[1]    ; 14.802 ;    ;    ; 14.802 ;
; result[2]  ; motor[1]    ; 15.745 ;    ;    ; 15.745 ;
; result[3]  ; motor[1]    ; 16.216 ;    ;    ; 16.216 ;
; result[4]  ; motor[1]    ; 16.623 ;    ;    ; 16.623 ;
; result[5]  ; motor[1]    ; 16.228 ;    ;    ; 16.228 ;
; result[6]  ; motor[1]    ; 13.852 ;    ;    ; 13.852 ;
; result[7]  ; motor[1]    ; 14.735 ;    ;    ; 14.735 ;
+------------+-------------+--------+----+----+--------+


+------------------------------------------------------+
; Minimum Propagation Delay                            ;
+------------+-------------+--------+----+----+--------+
; Input Port ; Output Port ; RR     ; RF ; FR ; FF     ;
+------------+-------------+--------+----+----+--------+
; dip_sw[0]  ; motor[1]    ; 14.820 ;    ;    ; 14.820 ;
; dip_sw[1]  ; motor[1]    ; 14.722 ;    ;    ; 14.722 ;
; dip_sw[2]  ; motor[1]    ; 14.570 ;    ;    ; 14.570 ;
; dip_sw[3]  ; motor[1]    ; 14.738 ;    ;    ; 14.738 ;
; dip_sw[4]  ; motor[1]    ; 14.715 ;    ;    ; 14.715 ;
; dip_sw[5]  ; motor[1]    ; 14.123 ;    ;    ; 14.123 ;
; dip_sw[6]  ; motor[1]    ; 14.224 ;    ;    ; 14.224 ;
; dip_sw[7]  ; motor[1]    ; 13.167 ;    ;    ; 13.167 ;
; reset      ; motor_en    ; 13.784 ;    ;    ; 13.784 ;
; reset      ; portc[0]    ; 13.781 ;    ;    ; 13.781 ;
; result[0]  ; motor[1]    ; 14.855 ;    ;    ; 14.855 ;
; result[1]  ; motor[1]    ; 14.796 ;    ;    ; 14.796 ;
; result[2]  ; motor[1]    ; 15.737 ;    ;    ; 15.737 ;
; result[3]  ; motor[1]    ; 16.204 ;    ;    ; 16.204 ;
; result[4]  ; motor[1]    ; 16.623 ;    ;    ; 16.623 ;
; result[5]  ; motor[1]    ; 16.211 ;    ;    ; 16.211 ;
; result[6]  ; motor[1]    ; 13.839 ;    ;    ; 13.839 ;
; result[7]  ; motor[1]    ; 14.735 ;    ;    ; 14.735 ;
+------------+-------------+--------+----+----+--------+


+-----------------------------------------------------------------------------------------------------+
; Setup Transfers                                                                                     ;
+----------------------------+----------------------------+----------+----------+----------+----------+
; From Clock                 ; To Clock                   ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+----------------------------+----------------------------+----------+----------+----------+----------+
; adc_1:u0|c_state.s_start   ; adc_1:u0|c_state.s_capture ; 2        ; 2        ; 0        ; 0        ;
; clk                        ; adc_1:u0|c_state.s_capture ; 16       ; 0        ; 0        ; 0        ;
; adc_1:u0|c_state.s_capture ; adc_1:u0|c_state.s_start   ; 1        ; 1        ; 0        ; 0        ;
; clk                        ; adc_1:u0|c_state.s_start   ; 8        ; 0        ; 0        ; 0        ;
; adc_1:u0|c_state.s_capture ; clk                        ; 1        ; 1        ; 0        ; 0        ;
; adc_1:u0|c_state.s_start   ; clk                        ; 11       ; 11       ; 0        ; 0        ;
; clk                        ; clk                        ; 1252     ; 0        ; 0        ; 0        ;
+----------------------------+----------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-----------------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                      ;
+----------------------------+----------------------------+----------+----------+----------+----------+
; From Clock                 ; To Clock                   ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+----------------------------+----------------------------+----------+----------+----------+----------+
; adc_1:u0|c_state.s_start   ; adc_1:u0|c_state.s_capture ; 2        ; 2        ; 0        ; 0        ;
; clk                        ; adc_1:u0|c_state.s_capture ; 16       ; 0        ; 0        ; 0        ;
; adc_1:u0|c_state.s_capture ; adc_1:u0|c_state.s_start   ; 1        ; 1        ; 0        ; 0        ;
; clk                        ; adc_1:u0|c_state.s_start   ; 8        ; 0        ; 0        ; 0        ;
; adc_1:u0|c_state.s_capture ; clk                        ; 1        ; 1        ; 0        ; 0        ;
; adc_1:u0|c_state.s_start   ; clk                        ; 11       ; 11       ; 0        ; 0        ;
; clk                        ; clk                        ; 1252     ; 0        ; 0        ; 0        ;
+----------------------------+----------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 18    ; 18   ;
; Unconstrained Input Port Paths  ; 111   ; 111  ;
; Unconstrained Output Ports      ; 18    ; 18   ;
; Unconstrained Output Port Paths ; 54    ; 54   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II TimeQuest Timing Analyzer
    Info: Version 11.0 Build 208 07/03/2011 Service Pack 1 SJ Web Edition
    Info: Processing started: Tue Jun 28 14:12:22 2016
Info: Command: quartus_sta ADC_DCMOTOR -c ADC_DCMOTOR
Info: qsta_default_script.tcl version: #1
Warning: Ignored assignments for entity "ADC_PWM" -- entity does not exist in design
    Warning: Assignment for entity set_instance_assignment -name PARTITION_HIERARCHY root_partition -to | -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name PARTITION_NETLIST_TYPE SOURCE -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name PARTITION_FITTER_PRESERVATION_LEVEL PLACEMENT_AND_ROUTING -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name PARTITION_PRESERVE_HIGH_SPEED_TILES ON -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name PARTITION_IGNORE_SOURCE_FILE_CHANGES OFF -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name PARTITION_ALWAYS_USE_QXP_NETLIST OFF -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name PARTITION_COLOR 16764057 -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name PARTITION_IMPORT_ASSIGNMENTS ON -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name PARTITION_IMPORT_EXISTING_ASSIGNMENTS REPLACE_CONFLICTING -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name PARTITION_IMPORT_EXISTING_LOGICLOCK_REGIONS REPLACE_CONFLICTING -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name PARTITION_IMPORT_PIN_ASSIGNMENTS ON -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name PARTITION_IMPORT_PROMOTE_ASSIGNMENTS ON -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name PARTITION_TYPE STANDARD_PARTITION -entity ADC_PWM -section_id Top was ignored
    Warning: Assignment for entity set_global_assignment -name ALLOW_MULTIPLE_PERSONAS OFF -entity ADC_PWM -section_id Top was ignored
Warning: Parallel compilation is not licensed and has been disabled
Warning: Timing Analysis is analyzing one or more combinational loops as latches
    Warning: Node "u0|start|combout" is a latch
    Warning: Node "u0|ale|combout" is a latch
    Warning: Node "u0|out_en|combout" is a latch
Critical Warning: Synopsys Design Constraints File file not found: 'ADC_DCMOTOR.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info: No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info: Deriving Clocks
    Info: create_clock -period 1.000 -name clk clk
    Info: create_clock -period 1.000 -name adc_1:u0|c_state.s_capture adc_1:u0|c_state.s_capture
    Info: create_clock -period 1.000 -name adc_1:u0|c_state.s_start adc_1:u0|c_state.s_start
Critical Warning: Timing requirements not met
Info: Worst-case setup slack is -5.234
    Info:     Slack End Point TNS Clock 
    Info: ========= ============= =====================
    Info:    -5.234        -5.234 adc_1:u0|c_state.s_start 
    Info:    -4.318      -172.712 clk 
    Info:     1.005         0.000 adc_1:u0|c_state.s_capture 
Info: Worst-case hold slack is -5.823
    Info:     Slack End Point TNS Clock 
    Info: ========= ============= =====================
    Info:    -5.823       -10.283 adc_1:u0|c_state.s_capture 
    Info:    -2.084        -5.965 clk 
    Info:     0.162         0.000 adc_1:u0|c_state.s_start 
Info: No Recovery paths to report
Info: No Removal paths to report
Info: Worst-case minimum pulse width slack is -1.583
    Info:     Slack End Point TNS Clock 
    Info: ========= ============= =====================
    Info:    -1.583      -159.743 clk 
    Info:     0.500         0.000 adc_1:u0|c_state.s_capture 
    Info:     0.500         0.000 adc_1:u0|c_state.s_start 
Info: The selected device family is not supported by the report_metastability command.
Info: Design is not fully constrained for setup requirements
Info: Design is not fully constrained for hold requirements
Info: Quartus II TimeQuest Timing Analyzer was successful. 0 errors, 22 warnings
    Info: Peak virtual memory: 224 megabytes
    Info: Processing ended: Tue Jun 28 14:12:23 2016
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


